buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'jacoco-android'
apply plugin: "net.saliman.cobertura"
apply plugin: "com.github.kt3k.coveralls"


/**
 * Get the version code from command line param
 *
 * @return int If the param -PversionCode is present then return int value or -1
 */
def getVersionCode = { ->

    def code = project.hasProperty('versionCode') ? versionCode.toInteger() : -1
    println "VersionCode is set to $code"
    return code
}

/**
 * Get the version code from command line param
 *
 * @return String If the param -PversionName is present then return int value or -1
 */
def getVersionName = { ->

    def name = project.hasProperty('versionCode') ? versionName.toString() : ""
    println "VersionName is set to $name"
    return name
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    defaultConfig {
        applicationId "com.example.alvarlega.testcc"
        minSdkVersion 22
        targetSdkVersion 23
        versionCode 2
        versionName "1.1"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
}

cobertura.coverageFormats = ['html', 'xml']

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
}
